openapi: "3.0.3"

info:
  title: "風船バレー"
  version: "1.0.0"

tags:
  - name: User
    description: ユーザの情報についてのAPI
  - name: Result
    description: 試合結果についてのAPI

paths:
  "/users":
    post:
      tags:
        - "User"
      summary: "ユーザ登録"
      operationId: "createUser"
      description: "ユーザを登録する。"
      requestBody:
        description: 登録するユーザの名前
        content:
          application/json:
            schema:
              type: object
              required:
                - "name"
              properties:
                name:
                  type: string
                  description: "登録するユーザの名前"
                  example: "とりっぴー"
      responses:
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
  "/users/{user_id}":
    get:
      tags:
        - "User"
      summary: "ユーザ情報取得"
      operationId: "getUser"
      description: "特定のユーザの情報を取得する。"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - "User"
      summary: "ユーザ退会"
      operationId: "deleteUser"
      description: "ユーザを削除する。"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: object
                example: "{}"
        "404":
          description: "Not Found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  "/results":
    post:
      tags:
        - "Result"
      summary: "試合結果登録"
      operationId: "registerResult"
      description: "試合結果を登録する。"
      requestBody:
        description: 試合結果
        content:
          application/json:
            schema:
              type: object
              required:
                - "player_ids"
                - "point"
              properties:
                player_ids:
                  type: array
                  description: "試合に参加したユーザのID一覧"
                  items:
                    type: integer
                    description: "ユーザID"
                    example: 1
                point:
                  type: integer
                  description: "試合のポイント"
                  example: 100
      responses:
        "201":
          description: "Created"
          content:
            application/json:
              schema:
                type: object
                example: "{}"
    get:
      tags:
        - "Result"
      summary: "試合結果一覧"
      operationId: "getAllResults"
      description: "試合結果の一覧を取得する。クエリを用いることで特定のユーザの結果一覧のみに絞ることもできる。"
      parameters:
        - name: user_id
          in: query
          description: "ユーザID"
          required: false
          schema:
            type: integer
            example: 1
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: object
                description: "試合結果一覧"
                required:
                  - "results"
                properties:
                  results:
                    type: array
                    items:
                      $ref: "#/components/schemas/Result"
components:
  schemas:
    User:
      required:
        - "id"
        - "name"
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "とりっぴー"
    Result:
      required:
        - "id"
        - "players"
        - "point"
        - "created_at"
      properties:
        id:
          type: integer
          example: 1
        players:
          type: array
          items:
            $ref: "#/components/schemas/User"
        point:
          type: integer
          example: 100
        created_at:
          type: string
          example: "2021-01-01 00:00:00"
    Error:
      required:
        - "code"
        - "message"
      properties:
        code:
          type: integer
          example: 404
        message:
          type: string
          example: "指定したIDのユーザは存在しません。"
